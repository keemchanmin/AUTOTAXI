/**********************************************************************************************************************
 * \file Motor.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef DRIVERS_MOTOR_H_
#define DRIVERS_MOTOR_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
 #include <Platform_Types.h>
/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/

/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/

typedef enum {
    MOTOR_CHANNEL_A = 0x0,
    MOTOR_CHANNEL_B = 0x1
} MOTOR_CHANNEL;

typedef enum
{
    P = 0,                             /* Default value */
    D,
    R,
    B
}
Gear_State;
/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
void Motor_Init(void);
void Motor_SetRPM(sint32 speed, MOTOR_CHANNEL);
void Motor_SetDuty(uint32 v, MOTOR_CHANNEL);
void Motor_Event_10MS(void);
void Motor_Get_Veclocity(uint16* Out_left_motor_velocity_m_s, uint16* Out_right_motor_velocity_m_s, uint16* Out_yaw_rate,boolean* Out_yaw_rate_order);
void Motor_Move(float32 inner_yaw_rate,float32 inner_target_speed_m_s, Gear_State dir,boolean isPowerBrake);
void Motor_PowerBrake(void);
void Motor_SoftBrake(void);
void Motor_BackSpin(Gear_State cur_dir);
void Motor_Set_Power_Brake_Flag(boolean val);
boolean Motor_Get_Power_Brake_Flag(void);
#endif /* DRIVERS_MOTOR_H_ */
